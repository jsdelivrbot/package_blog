<?php

namespace Xot\Blog;

use App\model\fpb\Grid;
use App\model\fpb\Region;
use App\model\TempOrder;
use Illuminate\Http\Request;
use Intervention\Image\ImageManagerStatic as Image;
use App\Http\Controllers\Controller;

use Xot\Blog\Models\Blog;
use Xot\Blog\Models\Tag;

//use blueimp\jquery-file-upload\UploadHandler;

class BlogController extends Controller{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $blogs = Blog::orderby("id", "desc")->limit(10)->get();
        $categories = $this->get_blog_categories();
        $latest_posts = $this->get_latest_posts();
        $tags = $this->get_tags();
        return view('blog::blog', ['blogs' => $blogs, 'categories' => $categories, 'latest_posts' => $latest_posts, 'tags' => $tags]);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $blogs = Blog::where('id', $id)->get();
        $categories = $this->get_blog_categories();
        $latest_posts = $this->get_latest_posts();
        $tags = $this->get_tags();
        return view('blog::post', ['blogs' => $blogs, 'categories' => $categories, 'latest_posts' => $latest_posts, 'tags' => $tags]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }




    /* FUNZIONI DI ANDREA PER MOSTRARE LE PAGINE DI BLOG/QUALCOSA */
    public function show_blog_page($page)
    {
        # code...
    }

    public function get_blog_categories()
    {
        return Blog::select('category')->distinct()->get();
    }

    public function get_latest_posts()
    {
        return Blog::orderby('id', 'desc')->limit(3)->get();
    }

    public function get_tags()
    {
        return Tag::select('name')->orderby('name')->get();
    }

    public function show_blog_category($category, $page)
    {
        $blogs = Blog::orderby('id', 'desc')->where('category', $category)->offset(($page - 1) * 10)->limit(10)->get();
        $categories = $this->get_blog_categories();
        $latest_posts = $this->get_latest_posts();
        $tags = $this->get_tags();
        return view('blog::blog', ['blogs' => $blogs, 'categories' => $categories, 'latest_posts' => $latest_posts, 'tags' => $tags, 'page' => $page]);
    }
}
